<?xml version="1.0"?>
<project name="IKVM.Runtime" default="IKVM.Runtime">
    <target name="first-pass">
        <property name="first-pass" value="true" />
        <call target="IKVM.Runtime" />
    </target>
    <target name="classpath">
        <property name="classpath" value="true" />
        <call target="IKVM.Runtime" />
    </target>
    <target name="signed">
        <property name="classpath" value="false" />
        <property name="signed" value="SIGNCODE" />
        <property name="signoption" value="-key:ikvm-key" />
        <property name="ilasm_signoption" value="/key:@ikvm-key" />
        <call target="IKVM.Runtime" />
    </target>

    <target name="IKVM.Runtime.JNI">
        <csc target="library" output="IKVM.Runtime.JNI.dll" define="${defs}" optimize="true" unsafe="true" rebuild="true">
            <sources>
                <include name="../CommonAssemblyInfo.cs" />
                <include name="JniInterface.cs" />
            </sources>
            <references>
                <include unless="${first-pass or not classpath}" name="../bin/IKVM.GNU.Classpath.dll" asis="true" />
                <include unless="${first-pass or classpath}" name="../bin/IKVM.OpenJDK.ClassLibrary.dll" asis="true" />
                <include name="../bin/IKVM.Runtime.dll" asis="true" />
            </references>
        </csc>
        <copy file="IKVM.Runtime.JNI.dll" todir="../bin" />        
    </target>

    <target name="IKVM.Runtime">
        <property overwrite="false" name="classpath" value="false" />
        <property overwrite="false" name="cfnet" value="false" />
        <property overwrite="false" name="first-pass" value="false" />
        <property name="defs" value="TRACE" />
        <if test="${property::exists('signed')}">
            <property name="defs" value="${defs};${signed}" />
        </if>
        <if test="${not classpath}">
            <property name="defs" value="${defs};OPENJDK" />
        </if>
        <if test="${first-pass}">
            <property name="defs" value="${defs};FIRST_PASS" />
        </if>
        <if test="${not first-pass}">
            <call target="IKVM.Runtime.JNI" />
        </if>
        <csc target="library" output="IKVM.Runtime.dll" define="${defs}" optimize="true" unsafe="false" rebuild="true">
            <sources>
                <include name="../CommonAssemblyInfo.cs" />
                <include name="AssemblyInfo.cs" />
                <include name="atomic.cs" />
                <include name="attributes.cs" />
                <include name="BigEndianBinaryReader.cs" />
                <include name="ByteCode.cs" />
                <include name="ByteCodeHelper.cs" />
                <include name="ClassFile.cs" />
                <include name="ClassLoaderWrapper.cs" />
                <include if="${classpath}" name="classpath.cs" />
                <include name="CodeEmitter.cs" />
                <include name="common.cs" />
                <include name="compiler.cs" />
                <include name="CoreClasses.cs" />
                <include name="DynamicClassLoader.cs" />
                <include name="ExceptionHelper.cs" />
                <include name="intrinsics.cs" />
                <include name="JavaException.cs" />
                <include name="MemberWrapper.cs" />
                <include unless="${classpath}" name="openjdk.cs" />
                <include name="profiler.cs" />
                <include name="tracer.cs" />
                <include name="TypeWrapper.cs" />
                <include name="verifier.cs" />
                <include name="vm.cs" />
            </sources>
            <resources>
                <include if="${not classpath and not first-pass}" name="../openjdk/vfs.zip" />
            </resources>
            <references>
                <include unless="${first-pass}" name="../bin/IKVM.Runtime.JNI.dll" asis="true" />
                <include unless="${first-pass or not classpath}" name="../bin/IKVM.GNU.Classpath.dll" asis="true" />
                <include unless="${first-pass or classpath}" name="../bin/IKVM.OpenJDK.ClassLibrary.dll" asis="true" />
                <!-- HACK mcs requires an explicit reference to System.Configuration -->
                <include name="${framework::get-assembly-directory(framework::get-target-framework())}/System.Configuration.dll" />
            </references>
            <nowarn>
                <!-- don't whine about deprecated methods -->
                <warning number="618" />
            </nowarn>
        </csc>
        <copy file="IKVM.Runtime.dll" todir="../bin" />
    </target>
</project>
